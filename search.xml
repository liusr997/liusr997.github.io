<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>猜数字小游戏</title>
      <link href="/2022/11/15/%E7%8C%9C%E6%95%B0%E5%AD%97%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
      <url>/2022/11/15/%E7%8C%9C%E6%95%B0%E5%AD%97%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="一个猜数字的小游戏（雾"><a href="#一个猜数字的小游戏（雾" class="headerlink" title="一个猜数字的小游戏（雾"></a>一个猜数字的小游戏（雾</h3><p>大概就是系统会生成随机的正确和错误的数字，你输入一个特定范围的数字，来判断你是否选中正确的数字</p><p>选中了正确的数字，到达一定次数会判断胜利</p><p>选了错误的数字，系统会从剩下的数字里随机挑选两个数字，一个正确的一个错误的，然后你继续判断输入</p><p>当错误次数到达一定次数，也会自动判断失败</p><p>如果当所有数字都输完了，结束的时候也有个判断，符合后也会判断失败</p><p>默认是猜9(index)位数字，其中正确数字(index+1)&#x2F;2 (right)位，错误(index-1)&#x2F;2 (error)位</p><p>当正确次数达到 (right)+1&#x2F;2 或者错误次数 (error)+2&#x2F;2 判断成功或失败</p><p>输入完所有数字如果正确次数小于等于  (right)-1&#x2F;2 或者 错误次数等于0次 也会判定失败</p><pre><code class="java">    public static void start&#123;// 创建一个数组，用来存储表示正确与错误的位置，用0代表错误，1为正确    int[] arr = new int[9];        // 先设置一共猜多少个数字，默认1-9，数组长度可以改成非偶数的长度    int[] arr1 = new int[arr.length];    indexArr(arr1);   // 设置存储正确与错误数字的数组            int[] right = new int[(arr.length + 1) / 2];    int[] error = new int[(arr.length - 1) / 2];        // 定义判断变量    int tcount = 0;    int wcount = 0;    // 将0或1按照随机索引存储到数组中，然后将其也存储到正确和错误的数组里    for (int i = 0; i &lt; arr.length; i++) &#123;            if (tcount != right.length) &#123;                arr[arr1[i] - 1] = 1;                right[i] = arr1[i];                tcount++;            &#125; else &#123;                arr[arr1[i] - 1] = 0;                error[i - right.length] = arr1[i];                wcount++;            &#125;    &#125;   // 把存储到正确和错误数组里的数字进行冒牌排序   newArr(error);   newArr(right);           //  定义记录成功和失败次数的变量       int wc = 0;   int tc = 0;   // 跳出循环条件   boolean flag = true;   // 定义两个列表，分别用来判断输入的数字是否重复和提示剩余数字   ArrayList&lt;Integer&gt; list = new ArrayList&lt;&gt;();   ArrayList&lt;Integer&gt; newList = new ArrayList&lt;&gt;();   //  接下来每输入一位数字，都会将输入的数字和未输入的数字进行一次判断，然后将没有输入的数字进行添加到列表中用来提示信息   for (int i = 0; i &lt; arr1.length; i++) &#123;            newList.add(arr1[i]);   &#125;            // 开始输入数字        for (int i = 0; i &lt; arr.length; i++) &#123;            Scanner sc = new Scanner(System.in);            while (true) &#123;                System.out.println(&quot;-----------------------------------------&quot;);                System.out.println(&quot;请输入1-&quot; + (arr.length) + &quot;号位&quot;);                System.out.println(&quot;当前是执行第&quot; + (i + 1) + &quot;次&quot;);                System.out.println(&quot;-----------------------------------------&quot;);                int inputNumber = sc.nextInt();                // 判断输入数字是否重复                boolean b = checkArr(list, inputNumber);                if (b) &#123;                    // 将输入的数字添加到列表中，方便接下来的操作                    list.add(inputNumber);                                        // 输入了错误的数字，会调用一个notice方法                    if (arr[inputNumber - 1] == 0) &#123;                        // 华丽的分隔符                       System.out.println(&quot;///////////////////////////////////////////&quot;);                        System.out.println(&quot;危险1次&quot;);                        wc++;                        tc--;                        System.out.println(&quot;当前wc位&quot; + wc);                        System.out.println(&quot;当前tc位&quot; + tc);                        // 提示还可以输入的数字                        checkList(list, arr1, newList);                        if (wc != (error.length+2)/2) &#123;                        // 提示一个正确和错误的数字                            notice(right, error, newList);                        &#125;                       System.out.println(&quot;///////////////////////////////////////////&quot;);                    &#125; else if (arr[inputNumber - 1] == 1) &#123;                       System.out.println(&quot;///////////////////////////////////////////&quot;);                        System.out.println(&quot;安全1次&quot;);                        tc++;                        wc--;                        System.out.println(&quot;当前wc位&quot; + wc);                        System.out.println(&quot;当前tc位&quot; + tc);                        // 提示还可以输入的数字                        checkList(list, arr1, newList);                       System.out.println(&quot;///////////////////////////////////////////&quot;);                    &#125;                    // 胜利或失败条件                    if (tc == (right.length+1)/2) &#123;                        System.out.println(&quot;您成功了！&quot;);                        flag = false;                        break;                    &#125; else if (wc == (error.length+2)/2) &#123;                        System.out.println(&quot;您失败了&quot;);                        flag = false;                        break;                    &#125;                    break;                &#125; else &#123;                    System.out.println(&quot;数字重复请重新输入&quot;);                    // 同样提示剩余数字                    checkList(list, arr1, newList);                &#125;            &#125;          // 失败自动跳出循环            if (!flag) &#123;                break;            &#125;        &#125;              // 输入完所有的数字判断失败条件        if (flag) &#123;            if (tc &lt;= (right.length-1)/2 || wc == 0) &#123;                System.out.println(&quot;你失败了&quot;);            &#125;        &#125;           &#125;</code></pre><p>随机打乱索引值，方便判断也方便赋值</p><pre><code class="java">//  将数组索引打乱     public static void indexArr(int[] arr) &#123;        Random r = new Random();        int key = r.nextInt(arr.length) + 1;        arr[0] = key;        for (int i = 0; i &lt; arr.length; i++) &#123;            key = r.nextInt(arr.length) + 1;            for (int j = 0; j &lt; i; j++) &#123;                while (arr[j] == key) &#123;                    key = r.nextInt(arr.length) + 1;                    j = 0;                &#125;            &#125;            arr[i] = key;        &#125;    &#125;</code></pre><p>主要是防止提示信息偶然的出现规律，其实也可以不加这条</p><pre><code class="java">//  将存储到正确和失败数组里的数字进行冒泡排序    public static int[] newArr(int[] arr) &#123;        for (int i = 0; i &lt; arr.length - 1; i++) &#123;            for (int j = 0; j &lt; arr.length - i - 1; j++) &#123;                if (arr[j + 1] &gt; arr[j]) &#123;                    int temp = arr[j + 1];                    arr[j + 1] = arr[j];                    arr[j] = temp;                &#125;            &#125;        &#125;        return arr;    &#125;</code></pre><p>重复就重输，直到符合要求</p><pre><code class="java">//  判断输入数字是否重复    public static boolean checkArr(ArrayList&lt;Integer&gt; list, int number) &#123;        for (int i = 0; i &lt; list.size(); i++) &#123;            Integer integer = list.get(i);            if (integer == number) &#123;                return false;            &#125;        &#125;        return true;    &#125;</code></pre><p>一个提示功能</p><pre><code class="java"> public static void checkList(ArrayList&lt;Integer&gt; list, int[] arr, ArrayList&lt;Integer&gt;   newList) &#123;         // 如果输入的数字存在，就把其去除        Integer index = list.get(list.size() - 1);        for (int i = 0; i &lt; arr.length; i++) &#123;            if (arr[i] == index) &#123;                newList.remove(index);            &#125;        &#125;        if (list.size() != arr.length) &#123;            System.out.print(&quot;当前还剩：&quot;);            for (int i = 0; i &lt; newList.size(); i++) &#123;                System.out.print(newList.get(i) + &quot;\t&quot;);            &#125;            System.out.println();        &#125; else &#123;            System.out.println(&quot;您已无机会&quot;);        &#125;    &#125;</code></pre><p>写这段的时候已经混乱了，毫无逻辑的乱打一通，实在懒得改了</p><pre><code class="java"> // 将未输入的数字筛选，然后提示一个正确和错误的数字    public static void notice(int[] right, int[] error, ArrayList&lt;Integer&gt; newList) &#123;        int[] notice = new int[2];        Random r = new Random();        // 防止正确数字和错误数字出现的位置有规律        int index = r.nextInt(2);// 将剩余错误和正确的数字随机各挑选一个用作提示信息        if (index == 1) &#123;            for (int i = 0; i &lt; newList.size(); i++) &#123;                for (int j = 0; j &lt; error.length; j++) &#123;                    if (newList.get(i) == error[j]) &#123;                        notice[0] = newList.get(i);                    &#125;                &#125;            &#125;            for (int i = 0; i &lt; newList.size(); i++) &#123;                for (int j = 0; j &lt; right.length; j++) &#123;                    if (newList.get(i) == right[j]) &#123;                        notice[1] = newList.get(i);                    &#125;                &#125;            &#125;        &#125; else &#123;            for (int i = 0; i &lt; newList.size(); i++) &#123;                for (int j = 0; j &lt; right.length; j++) &#123;                    if (newList.get(i) == right[j]) &#123;                        notice[1] = newList.get(i);                    &#125;                &#125;            &#125;            for (int i = 0; i &lt; newList.size(); i++) &#123;                for (int j = 0; j &lt; error.length; j++) &#123;                    if (newList.get(i) == error[j]) &#123;                        notice[0] = newList.get(i);                    &#125;                &#125;            &#125;        &#125;        System.out.println(&quot;其中有一数字为正确，请选择,如果出现0，说明已无错误或正确数字&quot;);        for (int i = 0; i &lt; notice.length; i++) &#123;            System.out.print(notice[i] + &quot;\t&quot;);        &#125;        System.out.println();    &#125;</code></pre><p>这玩意你让我再重写一遍，我说实话写不出来，完全想不到当时在敲代码时我的精神表现是一种什么状态，敲完之后看了一遍，没看懂写的啥，读第二遍的时候能理解了但也有些吃力，能修改的地方太多了，但实在不想弄，这玩意看了一遍之后没人会在想看第二遍的（逃</p><pre><code class="java"> public static void main(String[] args) &#123;        start();    &#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>加密</title>
      <link href="/2022/11/14/%E5%8A%A0%E5%AF%86/"/>
      <url>/2022/11/14/%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<hr><h3 id="获取一段字符串，给他转换成人看不懂的样子"><a href="#获取一段字符串，给他转换成人看不懂的样子" class="headerlink" title="获取一段字符串，给他转换成人看不懂的样子"></a>获取一段字符串，给他转换成人看不懂的样子</h3><p>没什么逻辑，完全瞎写</p><pre><code class="java">public class demo &#123;    public static void main(String[] args) &#123;        Random r = new Random();        Scanner sc = new Scanner(System.in);        System.out.println(&quot;请输入原始密码&quot;);        String def = sc.next();;        // 第一步，转换成ascll        ArrayList&lt;Integer&gt; OneStr = new ArrayList&lt;&gt;();        for (int i = 0; i &lt; def.length(); i++) &#123;            char c = def.charAt(i);            OneStr.add((int) c);        &#125;        // 第二部，随机增加数字        ArrayList&lt;Integer&gt; once = once(OneStr);        // 生成一些字符        ArrayList&lt;String&gt; two = two(once);        //转换成字符串        StringBuilder sb = new StringBuilder();        String str3 = &quot;&quot;;        for (int i = 0; i &lt; once.size(); i++) &#123;            Integer temp = once.get(i);            str3 = sb.append(temp).toString();        &#125;        // 第三步，截取一部分乘以随机数然后重新设置        for (int i = 0; i &lt; OneStr.size(); i++) &#123;            int r1 = r.nextInt(5) + 1;            char c = str3.charAt(i);            int threeint = c * r1;            OneStr.set(i,threeint);        &#125;        // 将生成的所有字符拼接成字符串        StringBuilder result = new StringBuilder();        for (int i = 0; i &lt; two.size(); i++) &#123;            String s = two.get(i);            result.append(s);        &#125;        for (int i = 0; i &lt; OneStr.size(); i++) &#123;            Integer in = OneStr.get(i);            result.append(in);        &#125;        char[] words = words();        for (int i = 0; i &lt; OneStr.size()+3; i++) &#123;            int index = r.nextInt(words.length);            result.append(words[index]);        &#125;        String fin = result.toString();        // 随机打乱成最终效果        String[] Str = new String[fin.length()];//最终字符存储的数组        int[] rando = new int[fin.length()];//传递长度        int[] newArr1 = isexist(rando);//索引值        for (int i = 0; i &lt; newArr1.length; i++) &#123;            char c = fin.charAt(i);                Str[newArr1[i]] = String.valueOf(c);        &#125;        for (int i = 0; i &lt; Str.length; i++) &#123;            System.out.print(Str[i]);        &#125;    &#125;    public static ArrayList&lt;Integer&gt; once(ArrayList&lt;Integer&gt; OneStr) &#123;        Random r = new Random();        for (int i = 0; i &lt; OneStr.size(); i++) &#123;            int rNumber = r.nextInt(100) + 1;            OneStr.set(i,OneStr.get(i) + rNumber);        &#125;        return OneStr;    &#125;    public static ArrayList&lt;String&gt; two(ArrayList&lt;Integer&gt; once) &#123;        Random r = new Random();        String[] ranStr = &#123;&quot;$&quot;, &quot;*&quot;, &quot;@&quot;, &quot;!&quot;, &quot;&amp;&quot;, &quot;%&quot;, &quot;^&quot;, &quot;]&quot;,&quot;&#123;&quot;,&quot;?&quot;, &quot;_&quot;,&quot;！&quot;, &quot;;&quot;, &quot;*&quot;, &quot;……&quot;, &quot;-&quot;, &quot;@&quot;, &quot;￥&quot;, &quot;|&quot;, &quot;#&quot;&#125;;        ArrayList&lt;String&gt; two = new ArrayList&lt;&gt;();        for (int i = 0; i &lt; once.size()*2; i++) &#123;            int index = r.nextInt(ranStr.length);            two.add(ranStr[index]);        &#125;        return two;    &#125;    public static char[] words()&#123;        char[] arr = new char[52];        for (int i = 0; i &lt; arr.length; i++) &#123;            if(i&gt;=0 &amp;&amp; i&lt;26)&#123;                arr[i] = (char)(65+i);            &#125;else if(i&gt;=26 &amp;&amp; i&lt;52)&#123;                arr[i] = (char)(97+i-26);            &#125;        &#125;        return arr;    &#125;    public static int[] isexist(int[] ran) &#123;        Random r = new Random();        ran[0] = r.nextInt(ran.length);        for (int i = 1; i &lt; ran.length; i++) &#123;            int index = r.nextInt(ran.length);            for (int k = 0; k &lt; i; k++) &#123;                while (ran[k] == index) &#123;                    index = r.nextInt(ran.length);                    k = 0;                &#125;            &#125;            ran[i] += index;        &#125;        return ran;    &#125;&#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>添加到MySQL</title>
      <link href="/2022/11/12/%E6%B7%BB%E5%8A%A0%E5%88%B0MySQL/"/>
      <url>/2022/11/12/%E6%B7%BB%E5%8A%A0%E5%88%B0MySQL/</url>
      
        <content type="html"><![CDATA[<h2 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h2><p>JAVA学了快一个月了，最近接触到了jdbc，试验一下</p><p>之前做的学生管理系统都是存储在生成控制台list集合中，重新运行后之前录入的数据也会重置，实际上数据是应该存在数据库中，所以今天用jdbc来模拟一下</p><p>程序用到了druid，导下jar包再做下配置，因为之后多个操作用到了con，用一个方法封装一下</p><pre><code class="java">  public static Connection prop() throws Exception &#123;        Properties prop = new Properties();        prop.load(new FileInputStream(&quot;D:\\JAVA\\javaTest\\JavaTest\\druid.properties&quot;));        DataSource dataSource = DruidDataSourceFactory.createDataSource(prop);        Connection con = dataSource.getConnection();        return con;    &#125;</code></pre><pre><code class="properties">driverClassName=com.mysql.jdbc.Driverurl=jdbc:mysql:///apple?useSSL=false&amp;useServerPrepStmts=trueusername=xxxpassword=xxx# 初始化的数据库连接数initialSize=5# 最大执行数maxActive=10# 最大等待时间maxWait=300</code></pre><p>因为是测试，所以只对数值进行了操作，主要有添加，修改，删除，查询的功能</p><p>先创建个MySQL表，基本字段有id学号，name姓名，gender性别，score成绩</p><pre><code class="mysql">CREATE TABLE student(name VARCHAR(50) not null,gender VARCHAR(10),score DOUBLE,id INT UNIQUE)</code></pre><p>然后写一些提示操作</p><pre><code class="java">public static void start() throws Exception &#123;        while (true) &#123;            Scanner sc = new Scanner(System.in);            System.out.println(&quot;请输入您要进行的操作：1——添加信息,2——修改信息,3——删除信息,4——查询信息,5——退出&quot;);            String index = sc.next();            switch (index) &#123;                case &quot;1&quot; -&gt; &#123;                    addInfo();                &#125;                case &quot;2&quot; -&gt; &#123;                    updateInfo();                &#125;                case &quot;3&quot; -&gt; &#123;                    deleteInfo();                &#125;                case &quot;4&quot; -&gt; &#123;                    showInfo();                &#125;                case &quot;5&quot; -&gt; &#123;                    System.exit(0);                &#125;                default -&gt; &#123;                    System.out.println(&quot;您输入错误的指令&quot;);                &#125;            &#125;        &#125;    &#125;</code></pre><h3 id="添加操作"><a href="#添加操作" class="headerlink" title="添加操作"></a>添加操作</h3><pre><code class="java">public static void addInfo() throws Exception &#123;        // 初始化        Connection con = prop();        // sql语句        String sql = &quot;insert into student (name,gender,score,id) values (?,?,?,?)&quot;;        PreparedStatement pstm = con.prepareStatement(sql);        Scanner sc = new Scanner(System.in);    // 因为操作多次用到查询id是否合法的功能，单独写个方法        while (true) &#123;            System.out.println(&quot;请输入学号&quot;);            int id = sc.nextInt();            ResultSet rs = pstmId(id);                 // 执行了说明存在            if (!rs.next()) &#123;                pstm.setInt(4, id);                break;            &#125; else &#123;                System.out.println(&quot;学号存在请重新输入&quot;);            &#125;        &#125;        System.out.println(&quot;请输入姓名&quot;);        String name = sc.next();        pstm.setString(1, name);        System.out.println(&quot;请输入性别&quot;);        String gender = sc.next();        pstm.setString(2, gender);        System.out.println(&quot;请输入成绩&quot;);        double score = sc.nextDouble();        pstm.setDouble(3, score);    // 输出操作成功的行数        int count = pstm.executeUpdate();        if (count &gt; 0) &#123;            System.out.println(&quot;添加成功&quot;);        &#125; else &#123;            System.out.println(&quot;添加失败&quot;);        &#125;        pstm.close();        con.close();    &#125;</code></pre><pre><code class="java">  public static ResultSet pstmId(int id) throws Exception &#123;        Connection con = prop();     // 输入id判断是否存在        String sqlId = &quot;select * from student where id = ?&quot;;        PreparedStatement pstmId = con.prepareStatement(sqlId);        pstmId.setInt(1, id);        ResultSet rs = pstmId.executeQuery();        return rs;    &#125;</code></pre><h3 id="修改操作"><a href="#修改操作" class="headerlink" title="修改操作"></a>修改操作</h3><pre><code class="java">    public static void updateInfo() throws Exception &#123;        Scanner sc = new Scanner(System.in);        Connection con = prop();        String sql = &quot; update student set name = ?,gender = ?,score = ? where id = ?&quot;;        PreparedStatement pstm = con.prepareStatement(sql);        System.out.println(&quot;请输入您要修改的数据的学号&quot;);        int id = sc.nextInt();        ResultSet rs = pstmId(id);        if (rs.next()) &#123;            System.out.println(&quot;请输入要修改的姓名&quot;);            String name = sc.next();            pstm.setString(1, name);            System.out.println(&quot;请输入要修改的性别&quot;);            String gender = sc.next();            pstm.setString(2, gender);            System.out.println(&quot;请输入要修改的成绩&quot;);            double score = sc.nextDouble();            pstm.setDouble(3, score);            pstm.setInt(4, id);            int count = pstm.executeUpdate();            if (count &gt; 0) &#123;                System.out.println(&quot;数据修改成功&quot;);            &#125; else &#123;                System.out.println(&quot;数据修改失败&quot;);            &#125;        &#125; else &#123;            System.out.println(&quot;学号不存在，修改失败&quot;);        &#125;        pstm.close();        con.close();    &#125;</code></pre><h3 id="删除操作"><a href="#删除操作" class="headerlink" title="删除操作"></a>删除操作</h3><pre><code class="java">  public static void deleteInfo() throws Exception &#123;        Scanner sc = new Scanner(System.in);        Connection con = prop();        String sql = &quot;delete from student where id = ?&quot;;        PreparedStatement pstm = con.prepareStatement(sql);        System.out.println(&quot;请输入您要删除的id&quot;);        int id = sc.nextInt();        ResultSet rs = pstmId(id);        if (rs.next()) &#123;            pstm.setInt(1, id);            int count = pstm.executeUpdate();            if (count &gt; 0) &#123;                System.out.println(&quot;删除成功&quot;);            &#125; else &#123;                System.out.println(&quot;删除失败&quot;);            &#125;        &#125; else &#123;            System.out.println(&quot;学号不存在&quot;);        &#125;        pstm.close();        rs.close();        con.close();    &#125;</code></pre><h3 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h3><pre><code class="java">public static void showInfo() throws Exception &#123;        Connection con = prop();        String sql = &quot; select * from student&quot;;        PreparedStatement pstm = con.prepareStatement(sql);        ResultSet rs = pstm.executeQuery();        while (rs.next()) &#123;            String name = rs.getString(&quot;name&quot;);            String gender = rs.getString(&quot;gender&quot;);            double score = rs.getDouble(&quot;score&quot;);            int id = rs.getInt(&quot;id&quot;);            System.out.println(&quot;------------------查询信息-----------------------&quot;);            System.out.println(&quot;该学生学号为:&quot; + id);            System.out.println(&quot;该学生姓名为:&quot; + name);            System.out.println(&quot;该学生性别为:&quot; + gender);            System.out.println(&quot;该学生成绩为:&quot; + score);            System.out.println(&quot;------------------------------------------------&quot;);            System.out.println();        &#125;        rs.close();        pstm.close();        con.close();    &#125;</code></pre><p>基本上都是修改sql语句来实现各自操作，最后弄个main执行一下</p><pre><code class="java">  public static void main(String[] args) throws Exception &#123;        &#123;            start();        &#125;    &#125;</code></pre><p>还可以添加更多的功能，因为是测试就懒得弄了~</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简易酒店入住系统</title>
      <link href="/2022/11/09/%E7%AE%80%E6%98%93%E9%85%92%E5%BA%97%E5%85%A5%E4%BD%8F%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/11/09/%E7%AE%80%E6%98%93%E9%85%92%E5%BA%97%E5%85%A5%E4%BD%8F%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="简易酒店入住系统"><a href="#简易酒店入住系统" class="headerlink" title="简易酒店入住系统"></a>简易酒店入住系统</h2><p>基本功能包括：入住、预约、查询、退房</p><hr><h3 id="基本信息定义"><a href="#基本信息定义" class="headerlink" title="基本信息定义"></a>基本信息定义</h3><p>首先创建客户的基本属性类，取名为CustomerInfo</p><p>定义姓名、身份证号、手机号、来源地成员变量及构造方法</p><p>为方便操作均定义为String类型</p><pre><code class="java">public class CustomerInfo&#123;    ////////定义成员变量      private String name;    private String phoneNumber;    private String idCard;    private String location;        ////////构造方法     public CustomerInfo() &#123;    &#125;    public CustomerInfo(String name, String phoneNumber, String idCard, String location)  &#123;        this.name = name;        this.phoneNumber = phoneNumber;        this.idCard = idCard;        this.location = location;    &#125;        ////////Getter、Setter       public String getName() &#123;        return name;    &#125;    public void setName(String name) &#123;        this.name = name;    &#125;     public String getPhoneNumber() &#123;        return phoneNumber;    &#125;      public void setPhoneNumber(String phoneNumber) &#123;        this.phoneNumber = phoneNumber;    &#125;    public String getIdCard() &#123;        return idCard;    &#125;       public void setIdCard(String idCard) &#123;        this.idCard = idCard;    &#125;        public String getLocation() &#123;        return location;    &#125;        public void setLocation(String location) &#123;        this.location = location;    &#125;&#125;</code></pre><p>创建主类，命名为ManagementSystem</p><p>由于房间数量固定，定义两个数组，展示房间信息和存储预约码</p><h3 id="提示用户操作"><a href="#提示用户操作" class="headerlink" title="提示用户操作"></a>提示用户操作</h3><pre><code class="java">public static void main(String[] args)&#123;    CustomerInfo[] roomNumber = new CustomerInfo[9];    String[] numberArr = new String[9];        while (true) &#123;            Scanner sc = new Scanner(System.in);            System.out.println(&quot;-----------------------------------------------------&quot;);            System.out.println(&quot;请输入您要进行的操作&quot;);            System.out.println(&quot;1.入住----2.预约----3.查询客房状态----4.退房----5.退出&quot;);            System.out.println(&quot;-----------------------------------------------------&quot;);            String index = sc.next();            switch (index) &#123;                case &quot;1&quot; -&gt; &#123;...&#125;                case &quot;2&quot; -&gt; &#123;...&#125;                case &quot;3&quot; -&gt; &#123;...&#125;                case &quot;4&quot; -&gt; &#123;...&#125;                case &quot;5&quot; -&gt; &#123;...&#125;                    System.exit(0);                &#125;                default -&gt; &#123;                    System.out.println(&quot;编号输入有误，请重新输入&quot;);                &#125;            &#125;        &#125;    &#125;</code></pre><h3 id="预约操作"><a href="#预约操作" class="headerlink" title="预约操作"></a>预约操作</h3><p>定义一个方法，传入两个分别表示客房状态和预约码的形参</p><p>创建一个CustomerInfo的对象，用于占位</p><pre><code class="java">public static void oppointment(CustomerInfo[] room, String[] numberArr)&#123;     CustomerInfo cuinfo = new CustomerInfo();     Scanner sc = new Scanner(System.in);        ////////判断是否存在空闲的房间并展示     for (int i = 0; i &lt; room.length; i++) &#123;            if (room[i] == null) &#123;                System.out.print(&quot;&#123;&quot; + (i + 1) + &quot;号&#125;&quot;);            &#125;     &#125;    System.out.println();    System.out.println(&quot;请选择您要预定的房间&quot;);    int op = sc.nextInt();        ////////对输入值进行验证，并占位    if (op &gt; 0 &amp;&amp; op &lt;= room.length) &#123;            cuinfo.setName(&quot;admin&quot;);            cuinfo.setIdCard(&quot;000&quot;);            cuinfo.setPhoneNumber(&quot;000&quot;);            cuinfo.setLocation(&quot;china&quot;);            room[op - 1] = cuinfo;            System.out.println(&quot;预约成功&quot;);                ////////回调oppointmentNumber            &#125; else &#123;            System.out.println(&quot;房间号输入有误，预约失败&quot;);    &#125;    &#125;</code></pre><h4 id="生成预约码"><a href="#生成预约码" class="headerlink" title="生成预约码"></a>生成预约码</h4><p>因为与预约系统绑定，所以创建一个int类型的形参，用于显示预定的房间号并返回调用</p><pre><code class="java"> public static void oppointmentNumber(CustomerInfo[] room, int num, String[] numberArr) &#123;                   ////////生成一个由五位数字随机组成的预约码（范围0-9）        Random r = new Random();        StringBuilder key = new StringBuilder();        for (int i = 0; i &lt; 5; i++) &#123;            int index = r.nextInt(10);            key.append(index);        &#125;        System.out.println(&quot;您的预约码为&quot; + key + &quot;房间号为&quot; + (num + 1) + &quot;号&quot;);            ////////将生成的预约码存储到数组        numberArr[num] = key.toString();    &#125;</code></pre><p>回到oppointment方法</p><p>调用oppointmentNumber,输出预约码和房间号，以便main函数调用</p><pre><code class="java"> ////////添加到初始化用户信息代码段后边 oppointmentNumber(room, (op - 1), numberArr);</code></pre><h3 id="入住操作"><a href="#入住操作" class="headerlink" title="入住操作"></a>入住操作</h3><p>定义check方法，传入两个分别表示客房状态和预约码的形参</p><p>首先判断是否预约</p><pre><code class="java"> public static void check(CustomerInfo[] room, String[] numberArr)&#123;      Scanner sc = new Scanner(System.in);        System.out.println(&quot;是否预约了房间？1.已经预约----2.未预约&quot;);        int i = sc.nextInt();          witch(i)&#123;         case &quot;1&quot; -&gt;&#123;...&#125;         case &quot;2&quot; -&gt;&#123;...&#125;         default -&gt;&#123;             System.out.println(&quot;编号输入有误，请重试&quot;);         &#125;     &#125;      &#125;</code></pre><h4 id="case-“1”"><a href="#case-“1”" class="headerlink" title="case “1”"></a>case “1”</h4><p>判断预约码是否存在</p><p>如果存在请用户重新更正自己的信息</p><p>不存在则提示</p><p>定义一个方法，获取用户预定的房间号</p><pre><code class="java">     System.out.println(&quot;请输入您预约的房间号&quot;);     String code = sc.next();         ////////获取房间号     int roomCode = roomCode(numberArr, code);     ////////判断预约码     boolean flag = isOppointment(numberArr, code);         if (flag) &#123;                    System.out.println(&quot;您已经预约,您的房间为&quot; + roomCode + &quot;号房&quot;);                    System.out.println(&quot;请输入您的姓名&quot;);                    String name = sc.next();                                ////////返回的数值从0开始，由于不存在0号房间，自动减一                    room[roomCode - 1].setName(name);                while (true) &#123;                        System.out.println(&quot;请输入您的手机号&quot;);                        String phoneNumber = sc.next();                                            ////////判断手机号是否正确                        boolean rightPhoneNumber = rightPhoneNumber(phoneNumber);                        if (rightPhoneNumber) &#123;                            room[roomCode - 1].setPhoneNumber(phoneNumber);                            break;                        &#125; else &#123;                            System.out.println(&quot;手机号输入有误&quot;);                        &#125;                &#125;                while (true) &#123;                        System.out.println(&quot;请输入您的身份证号&quot;);                        String idCard = sc.next();                                            ////////判断身份证号是否合法                        boolean rightIdCard = rightIdCard(idCard);                        if (rightIdCard) &#123;                            room[roomCode - 1].setIdCard(idCard);                            break;                        &#125; else &#123;                            System.out.println(&quot;身份证号输入有误&quot;);                        &#125;                &#125;                    System.out.println(&quot;请输入您的来源地&quot;);                    String from = sc.next();                    room[roomCode - 1].setLocation(from);                    System.out.println(&quot;您的信息更新成功，请愉快入住:)&quot;);                    &#125;         else &#123;             System.out.println(&quot;您未预约&quot;);        &#125;</code></pre><p>&#x3D;&#x3D;注意&#x3D;&#x3D;</p><p>由于用户可能选择任意房间号</p><p>将其依次对比判断时应添加非空判断，否则程序会报错</p><pre><code class="java"> //判断用户是否预约 public static boolean isOppointment(String[] numberArr, String key) &#123;        for (int i = 0; i &lt; numberArr.length; i++) &#123;            if (numberArr[i] != null) &#123;                if (numberArr[i].equals(key)) &#123;                    return true;                &#125;            &#125;        &#125;        return false; &#125;</code></pre><pre><code class="java">   //返回用户预定的房间号    public static int roomCode(String[] Number, String code) &#123;        for (int i = 0; i &lt; Number.length; i++) &#123;            if (Number[i] != null) &#123;                if (Number[i].equals(code)) &#123;                    return (i + 1);                &#125;            &#125;        &#125;        return -1;    &#125;</code></pre><p>判断手机号与身份证号是否合法</p><pre><code class="java">    ////////验证手机号    public static boolean rightPhoneNumber(String number) &#123;        for (int i = 0; i &lt; number.length(); i++) &#123;            char c = number.charAt(i);            if (c &gt;= &#39;a&#39; &amp;&amp; c &lt;= &#39;z&#39; || c &gt;= &#39;A&#39; &amp;&amp; c &lt;= &#39;Z&#39; || number.length() != 11 || number.charAt(0) != &#39;1&#39;) &#123;                return false;            &#125;        &#125;        return true;    &#125;</code></pre><pre><code class="java">    ////////验证身份证号    public static boolean rightIdCard(String idcard) &#123;        for (int i = 0; i &lt; idcard.length() - 1; i++) &#123;            char c = idcard.charAt(i);            char last = idcard.charAt(idcard.length() - 1);            boolean flag = last == &#39;x&#39; || last &gt;= &#39;0&#39; &amp;&amp; last &lt;= &#39;9&#39;;            if (c &gt;= &#39;a&#39; &amp;&amp; c &lt;= &#39;z&#39; || c &gt;= &#39;A&#39; &amp;&amp; c &lt;= &#39;Z&#39; || idcard.length() != 18 || !flag) &#123;                return false;            &#125;        &#125;        return true;    &#125;</code></pre><h4 id="case-“2”"><a href="#case-“2”" class="headerlink" title="case “2”"></a>case “2”</h4><p>&#x3D;&#x3D;注意&#x3D;&#x3D;，case1是更新用户信息，case2是录入用户的信息，因此需重新创建对象</p><pre><code class="java">        case 2 -&gt; &#123;                CustomerInfo cuinfo = new CustomerInfo();                            ////////获取空的房间位，入住默认从第一间依次向后                int index = useable(room);                System.out.println(&quot;第&quot; + (index + 1) + &quot;房间为空位&quot;);                if (index &gt;= 0) &#123;                    sc = new Scanner(System.in);                    System.out.println(&quot;请输入您的姓名&quot;);                    String name = sc.next();                    cuinfo.setName(name);                    while (true) &#123;                        System.out.println(&quot;请输入您的手机号&quot;);                        String phoneNumber = sc.next();                        boolean flag = rightPhoneNumber(phoneNumber);                        if (flag) &#123;                            cuinfo.setPhoneNumber(phoneNumber);                            break;                        &#125; else &#123;                            System.out.println(&quot;手机号输入有误&quot;);                        &#125;                    &#125;                    while (true) &#123;                        System.out.println(&quot;请输入您的身份证号&quot;);                        String idCard = sc.next();                        boolean flag = rightIdCard(idCard);                        if (flag) &#123;                            cuinfo.setIdCard(idCard);                            break;                        &#125; else &#123;                            System.out.println(&quot;身份证号输入有误&quot;);                        &#125;                    &#125;                    System.out.println(&quot;请输入您的来源地&quot;);                    String from = sc.next();                    cuinfo.setLocation(from);                    ////////用户登入信息添加到数组                    room[index] = cuinfo;                    System.out.println(&quot;用户登记添加成功&quot;);                &#125; else &#123;                    System.out.println(&quot;当前已无空闲房间&quot;);                &#125;            &#125;</code></pre><p>获取空闲的房间数量</p><pre><code class="java"> public static int useable(CustomerInfo[] room) &#123;        for (int i = 0; i &lt; room.length; i++) &#123;            if (room[i] == null) &#123;                System.out.println(&quot;当前存在&quot; + (9 - i) + &quot;间房间&quot;);                return i;            &#125;        &#125;        return -1; &#125;</code></pre><h3 id="查询客房状态操作"><a href="#查询客房状态操作" class="headerlink" title="查询客房状态操作"></a>查询客房状态操作</h3><pre><code class="java">public static void show(CustomerInfo[] rooms) &#123;        for (int i = 0; i &lt; rooms.length; i++) &#123;            if (rooms[i] != null) &#123;                String name = rooms[i].getName();                String phoneNumber = rooms[i].getPhoneNumber();                String id = rooms[i].getIdCard();                String from = rooms[i].getLocation();                System.out.println(&quot;当前&quot; + (i + 1) + &quot;号房间存在客户：&quot;);                System.out.println(&quot;姓名:&quot; + name + &quot;\t手机号:&quot; + phoneNumber + &quot;\t身份证号:&quot; + id + &quot;\t来源地:&quot; + from);            &#125; else &#123;                System.out.println(&quot;当前&quot; + (i + 1) + &quot;房间为空&quot;);            &#125;        &#125;    &#125;</code></pre><h3 id="退房操作"><a href="#退房操作" class="headerlink" title="退房操作"></a>退房操作</h3><pre><code class="java"> public static void outRoom(CustomerInfo[] room) &#123;        Scanner sc = new Scanner(System.in);        System.out.println(&quot;请输入您要退的房间&quot;);        int roomcode = sc.nextInt();        if (roomcode &gt; 0 &amp;&amp; roomcode &lt;= 9) &#123;            if (room[roomcode - 1] != null) &#123;                room[roomcode - 1] = null;                System.out.println(&quot;您已经成功退房:)&quot;);            &#125; else &#123;                System.out.println(&quot;您输入的房间号未有人居住或预约&quot;);            &#125;        &#125; else &#123;            System.out.println(&quot;您输入的房间号有错误&quot;);        &#125;    &#125;</code></pre><p>将四个基本操作回调的main函数中</p><pre><code class="java">         switch (index) &#123;                case &quot;1&quot; -&gt; &#123;                    check(roomNumber, numberArr);                &#125;                case &quot;2&quot; -&gt; &#123;                    oppointment(roomNumber, numberArr);                &#125;                case &quot;3&quot; -&gt; &#123;                    show(roomNumber);                &#125;                case &quot;4&quot; -&gt; &#123;                    outRoom(roomNumber);                &#125;                case &quot;5&quot; -&gt; &#123;                    System.exit(0);                &#125;                default -&gt; &#123;                    System.out.println(&quot;编号输入有误，请重新输入&quot;);                &#125;            &#125;</code></pre><h3 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h3><p>基本信息在同包名下单独创建一个类</p><pre><code class="java">public class ManagementSystem &#123;    public static void main(String[] args) &#123;        CustomerInfo[] roomNumber = new CustomerInfo[9];        String[] numberArr = new String[9];        while (true) &#123;            Scanner sc = new Scanner(System.in);            System.out.println(&quot;-----------------------------------------------------&quot;);            System.out.println(&quot;请输入您要进行的操作&quot;);            System.out.println(&quot;1.入住----2.预约----3.查询客房状态----4.退房----5.退出&quot;);            System.out.println(&quot;-----------------------------------------------------&quot;);            String index = sc.next();            switch (index) &#123;                case &quot;1&quot; -&gt; &#123;                    check(roomNumber, numberArr);                &#125;                case &quot;2&quot; -&gt; &#123;                    oppointment(roomNumber, numberArr);                &#125;                case &quot;3&quot; -&gt; &#123;                    show(roomNumber);                &#125;                case &quot;4&quot; -&gt; &#123;                    outRoom(roomNumber);                &#125;                case &quot;5&quot; -&gt; &#123;                    System.exit(0);                &#125;                default -&gt; &#123;                    System.out.println(&quot;编号输入有误，请重新输入&quot;);                &#125;            &#125;        &#125;    &#125;    public static void check(CustomerInfo[] room, String[] numberArr) &#123;        Scanner sc = new Scanner(System.in);        System.out.println(&quot;是否预约了房间？1.已经预约----2.未预约&quot;);        int i = sc.nextInt();        switch (i) &#123;            case 1 -&gt; &#123;                System.out.println(&quot;请输入您预约的房间号&quot;);                String code = sc.next();                int roomCode = roomCode(numberArr, code);                boolean flag = isOppointment(numberArr, code);                if (flag) &#123;                    System.out.println(&quot;您已经预约,您的房间为&quot; + roomCode + &quot;号房&quot;);                    System.out.println(&quot;请输入您的姓名&quot;);                    String name = sc.next();                    room[roomCode - 1].setName(name);                    while (true) &#123;                        System.out.println(&quot;请输入您的手机号&quot;);                        String phoneNumber = sc.next();                        boolean rightPhoneNumber = rightPhoneNumber(phoneNumber);                        if (rightPhoneNumber) &#123;                            room[roomCode - 1].setPhoneNumber(phoneNumber);                            break;                        &#125; else &#123;                            System.out.println(&quot;手机号输入有误&quot;);                        &#125;                    &#125;                    while (true) &#123;                        System.out.println(&quot;请输入您的身份证号&quot;);                        String idCard = sc.next();                        boolean rightIdCard = rightIdCard(idCard);                        if (rightIdCard) &#123;                            room[roomCode - 1].setIdCard(idCard);                            break;                        &#125; else &#123;                            System.out.println(&quot;身份证号输入有误&quot;);                        &#125;                    &#125;                    System.out.println(&quot;请输入您的来源地&quot;);                    String from = sc.next();                    room[roomCode - 1].setLocation(from);                    System.out.println(&quot;您的信息更新成功，请愉快入住:)&quot;);                &#125; else &#123;                    System.out.println(&quot;您未预约&quot;);                &#125;            &#125;            case 2 -&gt; &#123;                CustomerInfo cuinfo = new CustomerInfo();                int index = useable(room);                System.out.println(&quot;第&quot; + (index + 1) + &quot;房间为空位&quot;);                if (index &gt;= 0) &#123;                    sc = new Scanner(System.in);                    System.out.println(&quot;请输入您的姓名&quot;);                    String name = sc.next();                    cuinfo.setName(name);                    while (true) &#123;                        System.out.println(&quot;请输入您的手机号&quot;);                        String phoneNumber = sc.next();                        boolean flag = rightPhoneNumber(phoneNumber);                        if (flag) &#123;                            cuinfo.setPhoneNumber(phoneNumber);                            break;                        &#125; else &#123;                            System.out.println(&quot;手机号输入有误&quot;);                        &#125;                    &#125;                    while (true) &#123;                        System.out.println(&quot;请输入您的身份证号&quot;);                        String idCard = sc.next();                        boolean flag = rightIdCard(idCard);                        if (flag) &#123;                            cuinfo.setIdCard(idCard);                            break;                        &#125; else &#123;                            System.out.println(&quot;身份证号输入有误&quot;);                        &#125;                    &#125;                    System.out.println(&quot;请输入您的来源地&quot;);                    String from = sc.next();                    cuinfo.setLocation(from);                    room[index] = cuinfo;                    System.out.println(&quot;用户登记添加成功&quot;);                &#125; else &#123;                    System.out.println(&quot;当前已无空闲房间&quot;);                &#125;            &#125;            default -&gt; &#123;                System.out.println(&quot;编号输入有误，请重试&quot;);            &#125;        &#125;    &#125;    public static int useable(CustomerInfo[] room) &#123;        for (int i = 0; i &lt; room.length; i++) &#123;            if (room[i] == null) &#123;                System.out.println(&quot;当前存在&quot; + (9 - i) + &quot;间房间&quot;);                return i;            &#125;        &#125;        return -1;    &#125;    public static boolean rightPhoneNumber(String number) &#123;        for (int i = 0; i &lt; number.length(); i++) &#123;            char c = number.charAt(i);            if (c &gt;= &#39;a&#39; &amp;&amp; c &lt;= &#39;z&#39; || c &gt;= &#39;A&#39; &amp;&amp; c &lt;= &#39;Z&#39; || number.length() != 11 || number.charAt(0) != &#39;1&#39;) &#123;                return false;            &#125;        &#125;        return true;    &#125;    public static boolean rightIdCard(String idcard) &#123;        for (int i = 0; i &lt; idcard.length() - 1; i++) &#123;            char c = idcard.charAt(i);            char last = idcard.charAt(idcard.length() - 1);            boolean flag = last == &#39;x&#39; || last &gt;= &#39;0&#39; &amp;&amp; last &lt;= &#39;9&#39;;            if (c &gt;= &#39;a&#39; &amp;&amp; c &lt;= &#39;z&#39; || c &gt;= &#39;A&#39; &amp;&amp; c &lt;= &#39;Z&#39; || idcard.length() != 18 || !flag) &#123;                return false;            &#125;        &#125;        return true;    &#125;    public static void oppointment(CustomerInfo[] room, String[] numberArr) &#123;        CustomerInfo cuinfo = new CustomerInfo();        Scanner sc = new Scanner(System.in);        System.out.println(&quot;当前为空闲的房间有&quot;);        for (int i = 0; i &lt; room.length; i++) &#123;            if (room[i] == null) &#123;                System.out.print(&quot;&#123;&quot; + (i + 1) + &quot;号&#125;&quot;);            &#125;        &#125;        System.out.println();        System.out.println(&quot;请输入您要预约的房间&quot;);        int op = sc.nextInt();        if (op &gt; 0 &amp;&amp; op &lt;= room.length) &#123;            cuinfo.setName(&quot;admin&quot;);            cuinfo.setIdCard(&quot;000&quot;);            cuinfo.setPhoneNumber(&quot;000&quot;);            cuinfo.setLocation(&quot;china&quot;);            room[op - 1] = cuinfo;            oppointmentNumber(room, (op - 1), numberArr);            System.out.println(&quot;预约成功&quot;);        &#125; else &#123;            System.out.println(&quot;房间号输入有误，预约失败&quot;);        &#125;    &#125;    public static void oppointmentNumber(CustomerInfo[] room, int num, String[] numberArr) &#123;        Random r = new Random();        StringBuilder key = new StringBuilder();        for (int i = 0; i &lt; 5; i++) &#123;            int index = r.nextInt(10);            key.append(index);        &#125;        System.out.println(&quot;您的预约码为&quot; + key + &quot;房间号为&quot; + (num + 1) + &quot;号&quot;);        numberArr[num] = key.toString();    &#125;    public static boolean isOppointment(String[] numberArr, String key) &#123;        for (int i = 0; i &lt; numberArr.length; i++) &#123;            if (numberArr[i] != null) &#123;                if (numberArr[i].equals(key)) &#123;                    return true;                &#125;            &#125;        &#125;        return false;    &#125;    public static int roomCode(String[] Number, String code) &#123;        for (int i = 0; i &lt; Number.length; i++) &#123;            if (Number[i] != null) &#123;                if (Number[i].equals(code)) &#123;                    return (i + 1);                &#125;            &#125;        &#125;        return -1;    &#125;    public static void show(CustomerInfo[] rooms) &#123;        for (int i = 0; i &lt; rooms.length; i++) &#123;            if (rooms[i] != null) &#123;                String name = rooms[i].getName();                String phoneNumber = rooms[i].getPhoneNumber();                String id = rooms[i].getIdCard();                String from = rooms[i].getLocation();                System.out.println(&quot;当前&quot; + (i + 1) + &quot;号房间存在客户：&quot;);                System.out.println(&quot;姓名:&quot; + name + &quot;\t手机号:&quot; + phoneNumber + &quot;\t身份证号:&quot; + id + &quot;\t来源地:&quot; + from);            &#125; else &#123;                System.out.println(&quot;当前&quot; + (i + 1) + &quot;房间为空&quot;);            &#125;        &#125;    &#125;    public static void outRoom(CustomerInfo[] room) &#123;        Scanner sc = new Scanner(System.in);        System.out.println(&quot;请输入您要退的房间&quot;);        int roomcode = sc.nextInt();        if (roomcode &gt; 0 &amp;&amp; roomcode &lt;= 9) &#123;            if (room[roomcode - 1] != null) &#123;                room[roomcode - 1] = null;                System.out.println(&quot;您已经成功退房:)&quot;);            &#125; else &#123;                System.out.println(&quot;您输入的房间号未有人居住或预约&quot;);            &#125;        &#125; else &#123;            System.out.println(&quot;您输入的房间号有错误&quot;);        &#125;    &#125;    &#125;</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简易计算器</title>
      <link href="/2022/11/09/%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
      <url>/2022/11/09/%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>简易计算器</strong></p><p>只包括了加减乘除的运算</p><p>首先我们要从键盘获取数字和运算符，初始化</p><pre><code class="java">Scanner sc = new Scanner(System.in);System.out.println(&quot;请输入首位数字&quot;);double newNum;newNum = sc.nextDouble();</code></pre><p>然后我们要想的，当我输入第一位数字和第二位数字并进行运算后，得到的是第一对的运算结果 </p><p>再次进行运算时，进行操作的数值为第二位数字和第一对的运算结果进行运算，以此类推，在进行第一次运算后，每当我们再次进行运算后。拿取的值都为上一次运算结果的第二位数字和上一次的运算结果</p><p>所以，为了获取每一次的运算结果值，我们要在main函数的首部创建一个动态数组，用来存储数值</p><p>为了获取动态数组的每一个索引，我们创建一个变量</p><pre><code class="java">ArrayList&lt;Double&gt; numArr = new ArrayList&lt;&gt;();int count = 0;</code></pre><p>接下来获取键盘中的运算符,考虑到可能进行多次运算，我们设置一个循环，并定义退出条件</p><pre><code class="java">System.out.println(&quot;按e退出运算&quot;);    String cal;while(true)&#123;    System.out.println(&quot;请输入运算符&quot;);    cal = sc.next();    if(cal.equals(&quot;e&quot;))&#123;        System.exit(0);   &#125;else if(!cal.equals(&quot;+&quot;) &amp;&amp; !cal.equals(&quot;-&quot;) &amp;&amp; !cal.equals(&quot;*&quot;) &amp;&amp;! cal.equals(&quot;/&quot;))&#123;     System.out.println(&quot;运算符输入有误，请重新输入&quot;);      &#125;else&#123;        break;    &#125;&#125;</code></pre><p>获取参加运算的第二位数字,获取完对索引进行增加</p><pre><code class="java">double oldNum;    System.out.println(&quot;请输入第二位数字&quot;);    oldNum = sc.nexDouble();    count++;</code></pre><p>运算方法</p><pre><code class="java">   public static double add(double newNumber, double oldNumber) &#123;        return newNumber + oldNumber;    &#125;    public static double sub(double newNumber, double oldNumber) &#123;        return newNumber - oldNumber;    &#125;    public static double mul(double newNumber, double oldNumber) &#123;        return newNumber * oldNumber;    &#125;</code></pre><p>除数不能为0,对此进行判断</p><p>注意，如果我将分子输入了0，数值会返回0</p><p>这样的话是不合法的运算，然而我们也会将count自增，从而导致动态数组的索引值发生错乱</p><p>所以我们要返回第二位数字输入的位置，增加个判断</p><pre><code class="java"> public static double dev(double newNumber, double oldNumber) &#123;        if (oldNumber != 0) &#123;            return newNumber / oldNumber;        &#125; else &#123;            return 0;        &#125;    &#125;</code></pre><p>如果返回值为0，count不进行自增，并提示重输，直到运算为合法的</p><pre><code class="java">  while (true) &#123;                System.out.println(&quot;请输入数字&quot;);                oldNum = sc.nextDouble();                if (dev(newNum, oldNum) != 0) &#123;                    count++;                    break;                &#125; else &#123;                    System.out.println(&quot;数值输入有误,请重新输入&quot;);                &#125;            &#125;</code></pre><p>接下来判断符号并进行对结果的输出</p><p>if()判断是否为第一次进行运算</p><p>如果是将第一次的运算结果添加到动态数组中，方便之后运算的取值，此时的索引值为0</p><p>如果不是，要获取上一次的运算结果，也就是numArr[0]</p><p>由于我们每输入第二个数字后，count都会自增</p><p>所以我们第一次输出运算结果时的索引值为1，第二次及之后索引值必然时大于等于2 的</p><p>为了进行运算，要获取上一次结果的值，所以要使动态数组的索引值-2拿值</p><pre><code class="java">  switch (cal) &#123;                case &quot;+&quot; -&gt; &#123;                    if (count == 1) &#123;                        numArr.add(add(newNum, oldNum));                        System.out.println(&quot;结果为&quot; + add(newNum, oldNum));                    &#125; else &#123;                        numArr.add(add(numArr.get(count - 2), oldNum));                        System.out.println(&quot;结果为&quot; + add(numArr.get(count - 2), oldNum));                    &#125;                &#125;                case &quot;-&quot; -&gt; &#123;                    if (count == 1) &#123;                        numArr.add(sub(newNum, oldNum));                        System.out.println(&quot;结果为&quot; + sub(newNum, oldNum));                    &#125; else &#123;                        numArr.add(sub(numArr.get(count - 2), oldNum));                        System.out.println(&quot;结果为&quot; + sub(numArr.get(count - 2), oldNum));                    &#125;                &#125;                case &quot;*&quot; -&gt; &#123;                    if (count == 1) &#123;                        numArr.add(mul(newNum, oldNum));                        System.out.println(&quot;结果为&quot; + mul(newNum, oldNum));                    &#125; else &#123;                        numArr.add(mul(numArr.get(count - 2), oldNum));                        System.out.println(&quot;结果为&quot; + mul(numArr.get(count - 2), oldNum));                    &#125;                &#125;                case &quot;/&quot; -&gt; &#123;                    if (count == 1) &#123;                        numArr.add(dev(newNum, oldNum));                        System.out.println(&quot;结果为&quot; + dev(newNum, oldNum));                    &#125; else &#123;                        numArr.add(dev(numArr.get(count - 2), oldNum));                        System.out.println(&quot;结果为&quot; + dev(numArr.get(count - 2), oldNum));                    &#125;                &#125;            &#125;</code></pre><p>可能多次进行运算并输出结果，所以我们从输入符号的位置添加个循环</p><p>最终程序</p><pre><code class="java">    public static void main(String[] args) &#123;        ArrayList&lt;Double&gt; numArr = new ArrayList&lt;&gt;();        Scanner sc = new Scanner(System.in);        int count = 0;        double newNum;        System.out.println(&quot;按e退出&quot;);        System.out.println(&quot;请输入数字&quot;);        newNum = sc.nextDouble();                //多次进行运算        while (true) &#123;            String cal;            while (true) &#123;                System.out.println(&quot;请输入符号&quot;);                cal = sc.next();                if (cal.equals(&quot;e&quot;)) &#123;                    System.exit(0);                &#125; else if (!cal.equals(&quot;+&quot;) &amp;&amp; !cal.equals(&quot;-&quot;) &amp;&amp; !cal.equals(&quot;*&quot;) &amp;&amp; !cal.equals(&quot;/&quot;)) &#123;                    System.out.println(&quot;符号输入有误，请重新输入&quot;);                &#125; else &#123;                    break;                &#125;            &#125;            double oldNum;            while (true) &#123;                System.out.println(&quot;请输入数字&quot;);                oldNum = sc.nextDouble();                if (dev(newNum, oldNum) != 0) &#123;                    count++;                    break;                &#125; else &#123;                    System.out.println(&quot;有误&quot;);                &#125;            &#125;                        //运算并输出            switch (cal) &#123;                case &quot;+&quot; -&gt; &#123;                    if (count == 1) &#123;                        numArr.add(add(newNum, oldNum));                        System.out.println(&quot;结果为&quot; + add(newNum, oldNum));                    &#125; else &#123;                        numArr.add(add(numArr.get(count - 2), oldNum));                        System.out.println(&quot;结果为&quot; + add(numArr.get(count - 2), oldNum));                    &#125;                &#125;                case &quot;-&quot; -&gt; &#123;                    if (count == 1) &#123;                        numArr.add(sub(newNum, oldNum));                        System.out.println(&quot;结果为&quot; + sub(newNum, oldNum));                    &#125; else &#123;                        numArr.add(sub(numArr.get(count - 2), oldNum));                        System.out.println(&quot;结果为&quot; + sub(numArr.get(count - 2), oldNum));                    &#125;                &#125;                case &quot;*&quot; -&gt; &#123;                    if (count == 1) &#123;                        numArr.add(mul(newNum, oldNum));                        System.out.println(&quot;结果为&quot; + mul(newNum, oldNum));                    &#125; else &#123;                        numArr.add(mul(numArr.get(count - 2), oldNum));                        System.out.println(&quot;结果为&quot; + mul(numArr.get(count - 2), oldNum));                    &#125;                &#125;                case &quot;/&quot; -&gt; &#123;                    if (count == 1) &#123;                        numArr.add(dev(newNum, oldNum));                        System.out.println(&quot;结果为&quot; + dev(newNum, oldNum));                    &#125; else &#123;                        numArr.add(dev(numArr.get(count - 2), oldNum));                        System.out.println(&quot;结果为&quot; + dev(numArr.get(count - 2), oldNum));                    &#125;                &#125;            &#125;        &#125;    &#125;    //运算方法    public static double add(double newNumber, double oldNumber) &#123;        return newNumber + oldNumber;    &#125;    public static double sub(double newNumber, double oldNumber) &#123;        return newNumber - oldNumber;    &#125;    public static double mul(double newNumber, double oldNumber) &#123;        return newNumber * oldNumber;    &#125;    public static double dev(double newNumber, double oldNumber) &#123;        if (oldNumber != 0) &#123;            return newNumber / oldNumber;        &#125; else &#123;            return 0;        &#125;    &#125;</code></pre><p>如果要将输入数字位显示异常判断，自行添加if</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>articl</title>
      <link href="/2022/11/08/%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/11/08/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<hr><p><strong>这是一段文字，用来测试</strong></p><p>test</p><p>test</p><p>test</p><p>test</p><p>test</p><p>test</p><p>test</p><p>test</p><p>test</p><p>test</p><p>123456789</p><p>用来测试</p><p>！@#￥%……&amp;*（）—+&#x3D;-—__{}[]|?.&lt;&gt;;:”‘’~&#96;&#96;</p><pre><code class="java">System.out.println(&quot;我是人啊&quot;);int abc;String abc = &quot;111&quot;;for(;;)&#123;    &#125;while(true)&#123;    &#125;if()&#123;    &#125;else&#123;    &#125;do&#123;&#125;String str = new String();class abc extends def </code></pre><pre><code class="c">printf(&quot;我是人啊&quot;);int a ;while()&#123;    &#125;</code></pre><pre><code class="javascript">var abc ;class abc;document.querslector();@clickdata:aa</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/11/08/hello-world/"/>
      <url>/2022/11/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
